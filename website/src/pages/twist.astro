---
import { CCW, CW, ap, fr, fw, sw } from "../components/consts";
import { L3, R3 as R } from "../components/fingers";
import { arcs2paths, fingers2arcs } from "../components/math";

import Svg from "../components/Svg.astro";
import Layout from "../layouts/Layout.astro";

const R3 = { ...R, cx: R.cx - 800 };
const fingerss = [[CW,CW],[CCW,CW],[CW,CCW]].map(([c1,c2])=>[
    [L3, c1],
    [R3, c2],
]);

const arcss = fingerss.map(fingers2arcs);
const pathss = arcss.map((arcs, i) => arcs2paths(fingerss[i], arcs));
const d=     "M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.16 0-7.74 2.42-9.44 5.93-.32.67.04 1.47.75 1.71.59.2 1.23-.08 1.5-.64 1.3-2.66 4.03-4.5 7.19-4.5 1.95 0 3.73.72 5.12 1.88l-1.91 1.91c-.63.63-.19 1.71.7 1.71H21c.55 0 1-.45 1-1V9.41c0-.89-1.08-1.34-1.71-.71l-1.89 1.9z"
// ];
const [x, y, width, height] = [-56, 325, 300, 225];
const s=4;
---

<Layout title="segments">
    {
        pathss.map((paths,i) => <Svg
        viewBox={`${x} ${y} ${width} ${height}`}
        {width}
        {height}
    >
        <g fill="none">
            {
                // draw strings
                paths.map((path) => (
                    <>
                        <path d={path} stroke="white" stroke-width={fw + ap} />
                        <path d={path} stroke="red" stroke-width={sw} />
                    </>
                ))
            }
            {
                // draw fingers
                [L3, R3].map(({ cx, cy }) => (
                    <circle stroke="black" {cx} {cy} r={fr} stroke-width={fw} />
                ))
            }
        </g>
        <g fill="black" stroke-width="0" text-anchor="middle">
            <text x={L3.cx + 30} y={L3.cy - 60}>f</text>
            <text x={L3.cx + 30} y={L3.cy + 90}>n</text>

            {i && <text x={L3.cx + 105} y={L3.cy - 30}>x‚ÇÅ</text>}
        </g>
        <g transform={`scale(${s})`}>

        <path transform={`translate(-20,${L3.cy / s + 12}) rotate(-90)`} {d}/>
    </g>
    </Svg>)
    }
</Layout>
